/* This implementation of a custom icon system using css is based on
  https://css-tricks.com/creating-a-maintainable-icon-system-with-sass/
 */


$icons: (
        'download': '<svg xmlns="http://www.w3.org/2000/svg" width="30.544" height="25.294" viewBox="0 0 30.544 25.294"><g transform="translate(-991.366 -1287.5)"><path d="M1454.5,1298.922l6.881,6.881-6.881,6.881" transform="translate(2312.404 -157.556) rotate(90)" fill="none" stroke="%%COLOR%%" stroke-width="3"/><path d="M8853.866,5633.57v9.724h27.544v-9.724" transform="translate(-7861 -4332)" fill="none" stroke="%%COLOR%%" stroke-linejoin="round" stroke-width="3"/><line y2="14" transform="translate(1006.5 1287.5)" fill="none" stroke="%%COLOR%%" stroke-width="3"/></g></svg>',
        'external': '',
        'caret-right': '',
);


$data-svg-prefix: 'data:image/svg+xml;utf-8,';

/* Helper function for string replecement in SASS*/
@function str-replace( $string, $search, $replace: '' ) {

  $index: str-index($string, $search);

  @if $index {
    @return str-slice( $string, 1, $index - 1 ) + $replace + str-replace( str-slice( $string, $index + str-length( $search ) ), $search, $replace);
  }

  @return $string;
}

@function get-icon( $icon, $color: #fff ) {

  @if 'color' != type-of( $color ) {
    @warn 'The requested color - "' + $color + '" - was not recognized as a Sass color value.';
    @return null;
  }

  $icon: map-get($icons, $icon);
  $placeholder: '%%COLOR%%';
  $data-uri: str-replace(url($data-svg-prefix + $icon), $placeholder, $color);

  @return str-replace($data-uri, '#', '%23');
}


.button {
  appearance: none;
  background: none;


  border: 3px solid #d95a2b;
  border-radius: 100em;
  color: #d95a2b;
  cursor: pointer;
  display: inline-block;
  font-size: 18px;
  font-weight: 700;
  line-height: 1;
  padding: 48px;
  position: relative;
  text-align: center;
  text-transform: uppercase;
  transition: 200ms ease-in-out;
  transition-property: background-color, color;

  &:hover,
  &:active,
  &:focus {
    background: #d95a2b;
    color: #fff;
  }

  &::before,
  &::after {
    background: center / 24px 24px no-repeat;
    border-radius: 100em;
    bottom: 0;
    content: '';
    position: absolute;
    right: 0;
    top: 0;
    width: 48px;
  }


  // To allow for buttons with just icons
  &.icon-only::before,
  &.icon-only::after,
  {
    //Centering elements for icon-only buttons
    background-position: 50% 50%;
    background-repeat: no-repeat;
    transform: translate(-50%);
  }


  &--download {
    &::before {
      background-image: get-icon('download', #d95a2b);
    }

    &::after {
      background-image: get-icon('download', #fff);
    }
  }

}


// TEST AGAIN WITH THIS in a random page
//<button class="button button--download"> Download</button>
//<button class="button button--download icon-only"></button>